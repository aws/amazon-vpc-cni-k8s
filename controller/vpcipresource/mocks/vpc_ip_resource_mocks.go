// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-vpc-cni-k8s/controller/vpcipresource (interfaces: VPCIPResourceInterface)

// Package mock_vpcipresource is a generated GoMock package.
package mock_vpcipresource

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	"k8s.io/client-go/kubernetes"
)

// MockVPCIPResourceInterface is a mock of VPCIPResourceInterface interface
type MockVPCIPResourceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockVPCIPResourceInterfaceMockRecorder
}

// MockVPCIPResourceInterfaceMockRecorder is the mock recorder for MockVPCIPResourceInterface
type MockVPCIPResourceInterfaceMockRecorder struct {
	mock *MockVPCIPResourceInterface
}

// NewMockVPCIPResourceInterface creates a new mock instance
func NewMockVPCIPResourceInterface(ctrl *gomock.Controller) *MockVPCIPResourceInterface {
	mock := &MockVPCIPResourceInterface{ctrl: ctrl}
	mock.recorder = &MockVPCIPResourceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVPCIPResourceInterface) EXPECT() *MockVPCIPResourceInterfaceMockRecorder {
	return m.recorder
}

// Update mocks base method
func (m *MockVPCIPResourceInterface) Update(arg0 kubernetes.Interface, arg1 string, arg2 int) error {
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockVPCIPResourceInterfaceMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockVPCIPResourceInterface)(nil).Update), arg0, arg1, arg2)
}
