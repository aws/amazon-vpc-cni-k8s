// Copyright 2015-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/aws/amazon-ecs-agent/agent/resources (interfaces: Resource)

package mock_resources

import (
	api "github.com/aws/amazon-ecs-agent/agent/api"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Resource interface
type MockResource struct {
	ctrl     *gomock.Controller
	recorder *_MockResourceRecorder
}

// Recorder for MockResource (not exported)
type _MockResourceRecorder struct {
	mock *MockResource
}

func NewMockResource(ctrl *gomock.Controller) *MockResource {
	mock := &MockResource{ctrl: ctrl}
	mock.recorder = &_MockResourceRecorder{mock}
	return mock
}

func (_m *MockResource) EXPECT() *_MockResourceRecorder {
	return _m.recorder
}

func (_m *MockResource) Cleanup(_param0 *api.Task) error {
	ret := _m.ctrl.Call(_m, "Cleanup", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockResourceRecorder) Cleanup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Cleanup", arg0)
}

func (_m *MockResource) Init() error {
	ret := _m.ctrl.Call(_m, "Init")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockResourceRecorder) Init() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Init")
}

func (_m *MockResource) Setup(_param0 *api.Task) error {
	ret := _m.ctrl.Call(_m, "Setup", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockResourceRecorder) Setup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Setup", arg0)
}
