// Copyright 2015-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/aws/amazon-ecs-agent/agent/resources/cgroup/factory (interfaces: CgroupFactory)

package mock_factory

import (
	cgroups "github.com/containerd/cgroups"
	gomock "github.com/golang/mock/gomock"
	specs_go "github.com/opencontainers/runtime-spec/specs-go"
)

// Mock of CgroupFactory interface
type MockCgroupFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockCgroupFactoryRecorder
}

// Recorder for MockCgroupFactory (not exported)
type _MockCgroupFactoryRecorder struct {
	mock *MockCgroupFactory
}

func NewMockCgroupFactory(ctrl *gomock.Controller) *MockCgroupFactory {
	mock := &MockCgroupFactory{ctrl: ctrl}
	mock.recorder = &_MockCgroupFactoryRecorder{mock}
	return mock
}

func (_m *MockCgroupFactory) EXPECT() *_MockCgroupFactoryRecorder {
	return _m.recorder
}

func (_m *MockCgroupFactory) Load(_param0 cgroups.Hierarchy, _param1 cgroups.Path) (cgroups.Cgroup, error) {
	ret := _m.ctrl.Call(_m, "Load", _param0, _param1)
	ret0, _ := ret[0].(cgroups.Cgroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCgroupFactoryRecorder) Load(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Load", arg0, arg1)
}

func (_m *MockCgroupFactory) New(_param0 cgroups.Hierarchy, _param1 cgroups.Path, _param2 *specs_go.LinuxResources) (cgroups.Cgroup, error) {
	ret := _m.ctrl.Call(_m, "New", _param0, _param1, _param2)
	ret0, _ := ret[0].(cgroups.Cgroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCgroupFactoryRecorder) New(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "New", arg0, arg1, arg2)
}
