// Copyright 2015-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/aws/amazon-ecs-agent/agent/eni/udevwrapper (interfaces: Udev)

package mock_udevwrapper

import (
	udev "github.com/deniswernert/udev"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Udev interface
type MockUdev struct {
	ctrl     *gomock.Controller
	recorder *_MockUdevRecorder
}

// Recorder for MockUdev (not exported)
type _MockUdevRecorder struct {
	mock *MockUdev
}

func NewMockUdev(ctrl *gomock.Controller) *MockUdev {
	mock := &MockUdev{ctrl: ctrl}
	mock.recorder = &_MockUdevRecorder{mock}
	return mock
}

func (_m *MockUdev) EXPECT() *_MockUdevRecorder {
	return _m.recorder
}

func (_m *MockUdev) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockUdevRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockUdev) Monitor(_param0 chan *udev.UEvent) chan bool {
	ret := _m.ctrl.Call(_m, "Monitor", _param0)
	ret0, _ := ret[0].(chan bool)
	return ret0
}

func (_mr *_MockUdevRecorder) Monitor(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Monitor", arg0)
}
