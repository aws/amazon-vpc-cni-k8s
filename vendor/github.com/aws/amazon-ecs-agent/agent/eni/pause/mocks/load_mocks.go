// Copyright 2015-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/aws/amazon-ecs-agent/agent/eni/pause (interfaces: Loader)

package mock_pause

import (
	config "github.com/aws/amazon-ecs-agent/agent/config"
	engine "github.com/aws/amazon-ecs-agent/agent/engine"
	go_dockerclient "github.com/fsouza/go-dockerclient"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Loader interface
type MockLoader struct {
	ctrl     *gomock.Controller
	recorder *_MockLoaderRecorder
}

// Recorder for MockLoader (not exported)
type _MockLoaderRecorder struct {
	mock *MockLoader
}

func NewMockLoader(ctrl *gomock.Controller) *MockLoader {
	mock := &MockLoader{ctrl: ctrl}
	mock.recorder = &_MockLoaderRecorder{mock}
	return mock
}

func (_m *MockLoader) EXPECT() *_MockLoaderRecorder {
	return _m.recorder
}

func (_m *MockLoader) LoadImage(_param0 *config.Config, _param1 engine.DockerClient) (*go_dockerclient.Image, error) {
	ret := _m.ctrl.Call(_m, "LoadImage", _param0, _param1)
	ret0, _ := ret[0].(*go_dockerclient.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockLoaderRecorder) LoadImage(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LoadImage", arg0, arg1)
}
