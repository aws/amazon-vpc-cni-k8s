// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-vpc-cni-k8s/pkg/docker (interfaces: APIs)

// Package mock_docker is a generated GoMock package.
package mock_docker

import (
	reflect "reflect"

	docker "github.com/aws/amazon-vpc-cni-k8s/pkg/docker"
	gomock "github.com/golang/mock/gomock"
)

// MockAPIs is a mock of APIs interface
type MockAPIs struct {
	ctrl     *gomock.Controller
	recorder *MockAPIsMockRecorder
}

// MockAPIsMockRecorder is the mock recorder for MockAPIs
type MockAPIsMockRecorder struct {
	mock *MockAPIs
}

// NewMockAPIs creates a new mock instance
func NewMockAPIs(ctrl *gomock.Controller) *MockAPIs {
	mock := &MockAPIs{ctrl: ctrl}
	mock.recorder = &MockAPIsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPIs) EXPECT() *MockAPIsMockRecorder {
	return m.recorder
}

// GetRunningContainers mocks base method
func (m *MockAPIs) GetRunningContainers() (map[string]*docker.ContainerInfo, error) {
	ret := m.ctrl.Call(m, "GetRunningContainers")
	ret0, _ := ret[0].(map[string]*docker.ContainerInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRunningContainers indicates an expected call of GetRunningContainers
func (mr *MockAPIsMockRecorder) GetRunningContainers() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunningContainers", reflect.TypeOf((*MockAPIs)(nil).GetRunningContainers))
}
