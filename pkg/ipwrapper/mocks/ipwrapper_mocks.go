// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-vpc-cni-k8s/pkg/ipwrapper (interfaces: IP)

// Package mock_ipwrapper is a generated GoMock package.
package mock_ipwrapper

import (
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	netlink "github.com/vishvananda/netlink"
)

// MockIP is a mock of IP interface
type MockIP struct {
	ctrl     *gomock.Controller
	recorder *MockIPMockRecorder
}

// MockIPMockRecorder is the mock recorder for MockIP
type MockIPMockRecorder struct {
	mock *MockIP
}

// NewMockIP creates a new mock instance
func NewMockIP(ctrl *gomock.Controller) *MockIP {
	mock := &MockIP{ctrl: ctrl}
	mock.recorder = &MockIPMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIP) EXPECT() *MockIPMockRecorder {
	return m.recorder
}

// AddDefaultRoute mocks base method
func (m *MockIP) AddDefaultRoute(arg0 net.IP, arg1 netlink.Link) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDefaultRoute", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDefaultRoute indicates an expected call of AddDefaultRoute
func (mr *MockIPMockRecorder) AddDefaultRoute(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDefaultRoute", reflect.TypeOf((*MockIP)(nil).AddDefaultRoute), arg0, arg1)
}
